apply plugin: 'com.android.application'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        config {
            keyAlias 'dzbp'
            keyPassword 'com.dzbp321'
            storeFile file('D:/wuworkspace/keystore/dzbp.jks')
            storePassword 'com.dzbp321'
        }
    }
    defaultConfig {
        applicationId "com.md.dzbp"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 11
        versionName "2.0.2"
        //推送选择要添加的对应cpu类型的.so库。
        ndk {
            abiFilters 'armeabi'
        }

    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false      // 开启混淆
            shrinkResources false    // 去除无效的资源文件(依赖于minifyEnabled 为true)
            zipAlignEnabled false    // Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            debuggable false
            minifyEnabled false      // 开启混淆
            shrinkResources false    // 去除无效的资源文件(依赖于minifyEnabled 为true)
            zipAlignEnabled false    // Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    flavorDimensions "channel"
    productFlavors {
        wuhan {
            dimension "channel"
            versionCode 11
            versionName "2.0.2"
        }

        yichang {
            dimension "channel"
            versionCode 11
            versionName "2.0.2"
        }
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.0'
            }
        }
    }
}

android {
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    allprojects {
        repositories {
            maven { url "https://jitpack.io" }
        }
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.support:support-v4:26.0.0'
    compile 'com.android.support:design:26.0.0'
    compile 'com.apkfuns.logutils:library:1.2.2'
    compile 'cn.finalteam:okhttpfinal:2.0.7'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.zhy:base-adapter:3.0.3'
    compile 'com.github.bumptech.glide:glide:3.5.2'
    compile 'com.facebook.fresco:fresco:0.10.0'
    compile 'com.facebook.fresco:imagepipeline-okhttp:0.10.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.alibaba:fastjson:1.2.37'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.github.nanchen2251:CompressHelper:1.0.5'

    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }
    compile('com.github.Raizlabs.DBFlow:dbflow-core:4.2.4') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
    }
    compile('com.github.Raizlabs.DBFlow:dbflow:4.2.4') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
    }
    annotationProcessor('com.github.Raizlabs.DBFlow:dbflow-processor:4.2.4') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
    }
}
